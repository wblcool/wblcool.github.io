(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{364:function(e,r,t){"use strict";t.r(r);var a=t(42),v=Object(a.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h3",{attrs:{id:"浏览器输入url过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#浏览器输入url过程"}},[e._v("#")]),e._v(" 浏览器输入url过程")]),e._v(" "),t("p",[e._v("先看图\n"),t("img",{attrs:{src:"/http.png",alt:""}}),e._v(" "),t("b",[e._v("redirect")]),e._v(": "),t("br"),e._v("\n若网站设置了跳转,根据服务端设置的不同1.已永久性跳转到其他网址,浏览器第一次请求记录后之后发起的请求直接进行跳转；(301,不再经过服务器)2.不直接跳转,请求之后跳转"),t("br"),e._v("(返回302临时跳转-设置location)\n"),t("b",[e._v("App cache")]),e._v(":"),t("br"),e._v("\n应用缓存,此页面若设置了缓存将直接从缓存中读取不在发起请求"),t("br"),e._v(" "),t("b",[e._v("DNS解析")]),e._v("："),t("br"),e._v("\n根据域名与ip映射从pc、路由、服务器直到找到对应地址"),t("br"),e._v(" "),t("b",[e._v("TCP链接")]),e._v(":"),t("br"),e._v("\n三次握手创建链接"),t("br"),e._v(" "),t("b",[e._v("RequestStart")]),e._v("："),t("br"),e._v("\n发起http请求"),t("br"),e._v(" "),t("b",[e._v("Response")]),t("br"),e._v("\n接受响应数据"),t("br")]),e._v(" "),t("h4",{attrs:{id:"补充"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#补充"}},[e._v("#")]),e._v(" 补充")]),e._v(" "),t("p",[t("b",[e._v("http1.1/http2")]),t("br"),e._v("\n1.1协议浏览器仅能最大同时开启6个tcp链接(chrome),虽然1.1版本可在建立链接发送请求完毕后保持链接,但无法同时发起多个http请求,(传输格式字符串)浏览器无法判断哪个请求先后完成,同一个时间周期只能有一个http请求,其他需发送的请求在浏览器开启最大tcp链接后只能在后面排队等待发送。"),t("br")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("注")]),e._v(" "),t("p",[e._v("浏览器的并发请求数目限制是针对同一域名的,即同一时间针对同一域名下的请求有一定数量限制,超过限制数目的请求会被阻塞，因此资源较多时可将资源放在多个CDN服务上。")])]),e._v(" "),t("p",[e._v("2.0使用了二进制的传输格式,运用某种技术可以在同一个tcp链接中同时发起多个http请求.且一般是https。另外具有主动推送功能"),t("br")]),e._v(" "),t("p",[t("b",[e._v("跨域")]),t("br"),e._v("\n通常只需要服务端设置"),t("code",[e._v("Access-Control-Allow-Origin")]),e._v(",但发起请求时某些设置的请求头也不允许跨域，服务端需设置"),t("code",[e._v("Access-Control-Allow-Headers:请求设置的头")]),t("a",{attrs:{href:"https://fetch.spec.whatwg.org/#cors-safelisted-request-header",target:"_blank",rel:"noopener noreferrer"}},[e._v("查看fetch相关headers"),t("OutboundLink")],1),e._v(".以及允许某些方法"),t("code",[e._v("Access-Control-Allow-Methods:post, put, delete")]),t("br"),e._v(" "),t("code",[e._v("Access-Control-Max-Age:2000")]),e._v("(单位：s)表示多少秒之内不再需要发送预请求,但首次还需发送")]),e._v(" "),t("p",[t("b",[e._v("预请求")]),t("br")]),e._v(" "),t("p",[e._v("浏览器在某些情况下跨域时会首先发起一个请求询问服务器是否允许跨域,如果允许则发起真正请求请求数据，否则报错不允许跨域。"),t("a",{attrs:{href:"https://www.cnblogs.com/zsxblog/p/11061771.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("详细条件及解决办法"),t("OutboundLink")],1)]),e._v(" "),t("p",[t("b",[e._v("缓存")]),t("br"),e._v(" "),t("b",[e._v("cache-control")]),t("br"),e._v(" "),t("img",{attrs:{src:"/cache-control.jpg",alt:""}})]),e._v(" "),t("details",{staticClass:"custom-block details"},[t("summary",[e._v("详细")]),e._v(" "),t("ul",[t("li",[t("p",[t("b",[e._v("public：")]),e._v("所有内容都将被缓存（客户端和代理服务器都可缓存）。具体来说响应可被任何中间节点缓存，如 Browser <-- proxy1 <-- proxy2 <-- Server，中间的proxy可以缓存资源，比如下次再请求同一资源proxy1直接把自己缓存的东西给 Browser 而不再向proxy2要。")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("private：")]),e._v("所有内容只有客户端可以缓存，Cache-Control的默认取值。具体来说，表示中间节点不允许缓存，对于Browser <-- proxy1 <-- proxy2 <-- Server，proxy 会老老实实把Server 返回的数据发送给proxy1,自己不缓存任何数据。当下次Browser再次请求时proxy会做好请求转发而不是自作主张给自己缓存的数据。")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("no-cache：")]),e._v("客户端缓存内容，是否使用缓存则需要经过协商缓存来验证决定。表示不使用 Cache-Control的缓存控制方式做前置验证，而是使用 Etag 或者Last-Modified字段来控制缓存。需要注意的是，no-cache这个名字有一点误导。设置了no-cache之后，并不是说浏览器就不再缓存数据，只是浏览器在使用缓存数据时，需要先确认一下数据是否还跟服务器保持一致。")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("no-store：")]),e._v("所有内容都不会被缓存，即不使用强制缓存，也不使用协商缓存")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("max-age：")]),e._v("max-age=xxx (xxx is numeric)表示缓存内容将在xxx秒后失效")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("s-maxage")]),e._v("（单位为s)：同max-age作用一样，只在代理服务器中生效（比如CDN缓存）。比如当s-maxage=60时，在这60秒中，即使更新了CDN的内容，浏览器也不会进行请求。max-age用于普通缓存，而s-maxage用于代理缓存。s-maxage的优先级高于max-age。如果存在s-maxage，则会覆盖掉max-age和Expires header。")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("max-stale：")]),e._v("能容忍的最大过期时间。max-stale指令标示了客户端愿意接收一个已经过期了的响应。如果指定了max-stale的值，则最大容忍时间为对应的秒数。如果没有指定，那么说明浏览器愿意接收任何age的响应（age表示响应由源站生成或确认的时间与当前时间的差值）。")])]),e._v(" "),t("li",[t("p",[t("b",[e._v("min-fresh：")]),e._v("能够容忍的最小新鲜度。min-fresh标示了客户端不愿意接受新鲜度不多于当前的age加上min-fresh设定的时间之和的响应。")])])])]),e._v(" "),t("p",[t("b",[e._v("Last-Modified")]),e._v("\n:对比上次修改时间验证资源是否更新(服务端设置) 浏览器会在下次请求时带上"),t("br"),e._v("If-Modified-Since"),t("br"),e._v(" "),t("b",[e._v("Etag")]),e._v(" : 对比数据签名判断是否使用缓存(服务端设置) 浏览器会在下次请求时带上If-None-Match"),t("br")]),t("p",{staticStyle:{color:"red"}},[e._v("配合no-cache，浏览器发起验证是否可使用缓存")]),e._v("服务端返回304浏览器即读取缓存"),t("p"),e._v(" "),t("blockquote",[t("p",[e._v("关于http报文内容参考 掘金上怪盗kidou 的"),t("a",{attrs:{href:"https://www.jianshu.com/p/e544b7a76dac",target:"_blank",rel:"noopener noreferrer"}},[e._v("你应该知道的HTTP基础知识"),t("OutboundLink")],1)])])])}),[],!1,null,null,null);r.default=v.exports}}]);