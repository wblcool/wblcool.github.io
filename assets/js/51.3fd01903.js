(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{401:function(t,s,a){"use strict";a.r(s);var e=a(42),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p"),a("div",{staticClass:"table-of-contents"},[a("ul",[a("li",[a("a",{attrs:{href:"#内置指令"}},[t._v("内置指令")])]),a("li",[a("a",{attrs:{href:"#自定义指令"}},[t._v("自定义指令")])])])]),t._v('\n指令是带有特殊前缀"v-"的HTML特性，它绑定一个表达式，并将一些特性用在DOM上。'),a("p"),t._v(" "),a("h3",{attrs:{id:"内置指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内置指令"}},[t._v("#")]),t._v(" 内置指令")]),t._v(" "),a("h5",{attrs:{id:"v-bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-bind"}},[t._v("#")]),t._v(" v-bind")]),t._v(" "),a("p",[t._v("v-bind主要用法是动态更新HTML元素上的属性。常见的比如class及style。\n绑定class的方式")]),t._v(" "),a("ul",[a("li",[t._v("v-bind:class设置一个对象，可以动态切换class.如：")])]),t._v(" "),a("div",{staticClass:"language-vue extra-class"},[a("pre",{pre:!0,attrs:{class:"language-vue"}},[a("code",[t._v("...\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("active"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(" : isActive}"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token script"}},[a("span",{pre:!0,attrs:{class:"token language-javascript"}},[t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n     el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n     data "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        isActive "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("当条件过长或者逻辑复杂可以绑定在计算属性上。")]),t._v(" "),a("ul",[a("li",[t._v("数组语法")])]),t._v(" "),a("div",{staticClass:"language-html extra-class"},[a("pre",{pre:!0,attrs:{class:"language-html"}},[a("code",[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("div")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":class")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[a("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("[activeCls, errorCls]"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("div")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v('\nvar app = new Vue({\n    el : "#app",\n    data : {\n        activeCls : "active",\n        errorCls : "error"\n    }\n})\n'),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),a("p",[t._v("数组中可使用三元表达式切换class，也可在其中使用对象语法。\n绑定内联样式v-bind:style，与class类似，也有对象语法和数组语法，\n在组件上写class :class或者style :style时,规则会直接应用到这个组件的根元素上。")]),t._v(" "),a("h5",{attrs:{id:"v-cloak"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-cloak"}},[t._v("#")]),t._v(" v-cloak")]),t._v(" "),a("p",[t._v("v-cloak不需要表达式，会在Vue实例结束编译时从绑定的HTML元素上移除，通常和css display:none配合使用。在网速较慢，Vue.js文件未加载玩是，页面可能会出现"),a("code",[t._v("{ { message } }")]),t._v("的字样，直接Vue创建实例编译模板，DOM才会替换，屏幕在这个过程会有闪动。\nv-cloak是一个解决初始化慢导致页面闪动的最佳实践，对于简单项目有用，但对于复杂项目，例如结合webpack使用时，html结构只有一个空div元素，内容由挂载不同组件完成，故不需要使用。")]),t._v(" "),a("h5",{attrs:{id:"v-once"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-once"}},[t._v("#")]),t._v(" v-once")]),t._v(" "),a("p",[t._v("不需要表达式，定义它的元素或组件只渲染一次，包括元素或组件的所有子节点，首次渲染后不在随数据的变化重新渲染，将被视为静态内容。")]),t._v(" "),a("h5",{attrs:{id:"v-if、v-else-if、v-else"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-if、v-else-if、v-else"}},[t._v("#")]),t._v(" v-if、v-else-if、v-else")]),t._v(" "),a("p",[t._v("v-else-if要紧跟v-if，v-else要紧跟v-else-if或v-if,表达式为真时当前元素/组件及子节点将被渲染，为假时移除。如果一次判断多个元素可以在Vue内置"),a("code",[t._v("<template>")]),t._v("元素上使用条件指令，最终渲染时不包括改元素。\nVue在渲染元素时，处于效率考虑，会尽可能复用已有的元素而非重新渲染。比如Input元素，使用v-if v-else时，DOM虽然在切换时变了，但是之前输入框的内容并不会变，只会替换placeholder的内容。可以使用Vue提供的key属性，它可以决定是否要复用元素，key的值必须唯一。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"type === 'name'\"")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("用户名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input placeholder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入用户名"')]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name-input"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("template v"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("else")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("邮箱"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("label"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("input placeholder"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"输入邮箱"')]),t._v(" key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mail-input"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("template"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("这里input不会在复用，切换时输入内容也会删除，但label还是会被复用。")]),t._v(" "),a("h5",{attrs:{id:"v-show"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-show"}},[t._v("#")]),t._v(" v-show")]),t._v(" "),a("p",[t._v("v-show是改变元素css属性display,当切换频繁时使用，但不能用在v-template上。")]),t._v(" "),a("h5",{attrs:{id:"v-for"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-for"}},[t._v("#")]),t._v(" v-for")]),t._v(" "),a("ul",[a("li",[t._v("数组遍历：表达式结合in使用，比如"),a("code",[t._v('v-for="book in books"')]),t._v("。列表渲染也支持使用of替代in。\n"),a("code",[t._v('v-for="(book, index) in books"')]),t._v("，第二项就是books当前项的索引。")]),t._v(" "),a("li",[t._v("对象遍历: "),a("code",[t._v('v-for="value in user"')]),t._v("。遍历对象有两个可选参数，分别是键名和索引"),a("code",[t._v('v-for="(value, key, index) in user"')])]),t._v(" "),a("li",[t._v("v-for还可以迭代整数 "),a("code",[t._v('v-for="n in 10"')]),t._v("\nv-for也可用在内置标签"),a("code",[t._v("<template>")]),t._v("上，对于将多个元素进行渲染。\nVue的核心是数据与视图的双向绑定，当我们修改数组时，Vue会检测到数据变化，所以用v-for渲染的视图也会立即更新。使用这些方法改变数组会触发视图更新：push、pop、shift、unshift、splice、sort、reverse。在使用fiter、concat、slice、map等时不会替换原数组。\n注意:slice返回一个新数组，不过是浅拷贝。\nVue在检测到数组变化时，并不是直接重新渲染整个列表，而是最大化的复用DOM元素，替换的数组中，含有相同元素的项不会被重新渲染。但是Vue不能检测到通过索引直接设置项和修改数组长度引起的数组变化，即不会触发视图更新。\n"),a("code",[t._v("app.books[3] = {...} app.books.length = 1")]),t._v("\n如果必须要这样使用可以这样解决,对于直接设置项")])]),t._v(" "),a("ol",[a("li",[t._v("使用Vue内置的set方法")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("Vue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"RORONOA"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("2.如果在webpack中使用组件化方式")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("$set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("books"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"CHOPPER"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("这里this指向当前组件实例，即app。在非webpack模式下也可以用$set方法。比如app.$set(...).也可使用splice。")]),t._v(" "),a("h5",{attrs:{id:"v-model"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v-model"}},[t._v("#")]),t._v(" v-model")]),t._v(" "),a("h3",{attrs:{id:"自定义指令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令"}},[t._v("#")]),t._v(" 自定义指令")]),t._v(" "),a("h5",{attrs:{id:"注册方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注册方法"}},[t._v("#")]),t._v(" 注册方法")]),t._v(" "),a("ul",[a("li",[t._v('全局注册 Vue.directive("focus", {//指令选项})')]),t._v(" "),a("li",[t._v("局部注册")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" app "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Vue")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    el "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"#app"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    directives "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        focus "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//指令选项")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("写法与组件类似，只是方法名由component改为directive。")]),t._v(" "),a("h6",{attrs:{id:"自定义指令选项"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#自定义指令选项"}},[t._v("#")]),t._v(" 自定义指令选项")]),t._v(" "),a("p",[t._v("自定义指令的选项是由几个钩子函数组成的，每个都是可选的。")]),t._v(" "),a("ul",[a("li",[t._v("bind : 只调用一次，指令第一次绑定到元素时调用，用这个钩子函数可以定义一个在绑定时执行一次的初始化动作。")]),t._v(" "),a("li",[t._v("inserted : 被绑定元素插入父节点时调用(父节点存在时即可调用,不必存在于document中)。")]),t._v(" "),a("li",[t._v("update : 被绑定元素所在的模板更新时调用，而不论绑定值是否变化。通过比较更新前后的绑定值，可以忽略不必要的模板更新。")]),t._v(" "),a("li",[t._v("componentUpdated : 被绑定元素所在模板完成一次更新周期时调用。")]),t._v(" "),a("li",[t._v("unbind ： 只调用一次，指令与元素解绑时调用。\n每个钩子函数都有几个参数可用，")]),t._v(" "),a("li",[t._v("el : 指令所绑定的元素，可以用来直接操作DOM")]),t._v(" "),a("li",[t._v("binding ： 一个对象")]),t._v(" "),a("li",[t._v("vnode : Vue编译生成的虚拟节点")]),t._v(" "),a("li",[t._v("oldVnode : 上一个虚拟节点，仅在update和componentUpdate钩子中可用")])]),t._v(" "),a("p",[t._v("大多数使用场景，会在bind钩子里绑定一些事件,比如document上用addEventListener绑定，在unbind里用removeEventListener解绑。")]),t._v(" "),a("h6",{attrs:{id:"binding属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#binding属性"}},[t._v("#")]),t._v(" binding属性")]),t._v(" "),a("ul",[a("li",[t._v("name 指令名称，不包含v-前缀")]),t._v(" "),a("li",[t._v('value 指令的绑定值，例如v-my-directive="1+1",value的值是2.若为一个函数可直接使用binding.value()调用。')]),t._v(" "),a("li",[t._v("oldValue 指令绑定的前一个值，仅在update和componentUpdated钩子中可用。无论值是否改变都可用。")]),t._v(" "),a("li",[t._v('expression 绑定值的字符串形式。例如v-my-direcrive="1+1",expression的值是"1+1".')]),t._v(" "),a("li",[t._v("arg 传给指令的参数。例如v-my-directive:foo，arg的值是foo。")]),t._v(" "),a("li",[t._v("modifiers 一个包含修饰符的对象。例如v-my-directive.foo.bar，修饰符对象modifiers的值{foo:true,bar:true}.")]),t._v(" "),a("li",[t._v("如果需要多个值，自定义指令也可传入一个javascript对象。")])])])}),[],!1,null,null,null);s.default=n.exports}}]);